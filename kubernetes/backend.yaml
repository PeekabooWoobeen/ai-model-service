apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ai-model-service
data:
  MODEL_STORAGE_PATH: "/app/models"
  API_VERSION: "v1"
  MAX_UPLOAD_SIZE: "100MB"

---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: ai-model-service
type: Opaque
data:
  # echo -n "your-secret" | base64
  SECRET_KEY: c2VjcmV0LWtleS0xMjM=
  GCS_BUCKET: YWktbW9kZWwtc3RvcmFnZQ==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ai-model-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: asia-northeast3-docker.pkg.dev/ai-model-service/backend:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: model-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: ai-model-service
spec:
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP