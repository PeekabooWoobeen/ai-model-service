name: Development Pipeline

# 이 파이프라인이 실행되는 조건
on:
  # develop 브랜치에 push가 있을 때
  push:
    branches: [ develop ]
  # develop 브랜치로 PR이 생성될 때
  pull_request:
    branches: [ develop ]

# 환경 변수 설정
env:
  PROJECT_ID: ai-model-service-project    # GCP 프로젝트 ID

# 작업 정의
jobs:
  # 테스트 작업
  test:
    runs-on: ubuntu-latest
    
    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v2

    # Python 설정 (백엔드 테스트용)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Node.js 설정 (프론트엔드 테스트용)
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    # 백엔드 테스트
    - name: Test Backend
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m pytest

    # 프론트엔드 테스트
    - name: Test Frontend
      working-directory: ./frontend
      run: |
        npm install
        npm test

  # 빌드 작업
  build:
    needs: test  # test 작업이 성공한 후에 실행
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    # Docker 빌드 및 태그 설정
    - name: Build Docker images
      run: |
        docker build -t backend:dev ./backend
        docker build -t frontend:dev ./frontend
        
    # 테스트용 이미지 스캔
    - name: Scan Docker images
      uses: anchore/scan-action@v2
      with:
        image: "backend:dev"
        fail-build: true
        severity-cutoff: high